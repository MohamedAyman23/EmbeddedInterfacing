Version 4.0 HI-TECH Software Intermediate Code
"1380 C:/Program Files/Microchip/MPLABX/v6.15/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[v _TRISA `Vuc ~T0 @X0 0 e@3986 ]
"1602
[v _TRISB `Vuc ~T0 @X0 0 e@3987 ]
"1824
[v _TRISC `Vuc ~T0 @X0 0 e@3988 ]
"2046
[v _TRISD `Vuc ~T0 @X0 0 e@3989 ]
"2268
[v _TRISE `Vuc ~T0 @X0 0 e@3990 ]
"880
[v _LATA `Vuc ~T0 @X0 0 e@3977 ]
"992
[v _LATB `Vuc ~T0 @X0 0 e@3978 ]
"1104
[v _LATC `Vuc ~T0 @X0 0 e@3979 ]
"1216
[v _LATD `Vuc ~T0 @X0 0 e@3980 ]
"1328
[v _LATE `Vuc ~T0 @X0 0 e@3981 ]
"52
[v _PORTA `Vuc ~T0 @X0 0 e@3968 ]
"189
[v _PORTB `Vuc ~T0 @X0 0 e@3969 ]
"360
[v _PORTC `Vuc ~T0 @X0 0 e@3970 ]
"535
[v _PORTD `Vuc ~T0 @X0 0 e@3971 ]
"677
[v _PORTE `Vuc ~T0 @X0 0 e@3972 ]
"47 MCAL_Layer/GPIO/hal_gpio.h
[; ;MCAL_Layer/GPIO/hal_gpio.h: 47: typedef struct{
[s S273 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S273 . port pin direction logic ]
"34 MCAL_Layer/GPIO/hal_gpio.c
[; ;MCAL_Layer/GPIO/hal_gpio.c: 34:         }
[c E2985 0 1 .. ]
[n E2985 . GPIO_DIRECTION_OUTPUT GPIO_DIRECTION_INPUT  ]
"69
[; ;MCAL_Layer/GPIO/hal_gpio.c: 69: Std_ReturnType gpio_pin_write_logic(const pin_config_t *_pin_config, logic_t logic){
[c E2989 0 1 .. ]
[n E2989 . GPIO_LOW GPIO_HIGH  ]
"156
[; ;MCAL_Layer/GPIO/hal_gpio.c: 156: Std_ReturnType gpio_port_direction_initialize(port_index_t port, uint8 direction){
[c E2978 0 1 2 3 4 .. ]
[n E2978 . PORTA_INDEX PORTB_INDEX PORTC_INDEX PORTD_INDEX PORTE_INDEX  ]
"54 C:/Program Files/Microchip/MPLABX/v6.15/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"191
[; <" PORTB equ 0F81h ;# ">
"362
[; <" PORTC equ 0F82h ;# ">
"537
[; <" PORTD equ 0F83h ;# ">
"679
[; <" PORTE equ 0F84h ;# ">
"882
[; <" LATA equ 0F89h ;# ">
"994
[; <" LATB equ 0F8Ah ;# ">
"1106
[; <" LATC equ 0F8Bh ;# ">
"1218
[; <" LATD equ 0F8Ch ;# ">
"1330
[; <" LATE equ 0F8Dh ;# ">
"1382
[; <" TRISA equ 0F92h ;# ">
"1387
[; <" DDRA equ 0F92h ;# ">
"1604
[; <" TRISB equ 0F93h ;# ">
"1609
[; <" DDRB equ 0F93h ;# ">
"1826
[; <" TRISC equ 0F94h ;# ">
"1831
[; <" DDRC equ 0F94h ;# ">
"2048
[; <" TRISD equ 0F95h ;# ">
"2053
[; <" DDRD equ 0F95h ;# ">
"2270
[; <" TRISE equ 0F96h ;# ">
"2275
[; <" DDRE equ 0F96h ;# ">
"2434
[; <" OSCTUNE equ 0F9Bh ;# ">
"2499
[; <" PIE1 equ 0F9Dh ;# ">
"2576
[; <" PIR1 equ 0F9Eh ;# ">
"2653
[; <" IPR1 equ 0F9Fh ;# ">
"2730
[; <" PIE2 equ 0FA0h ;# ">
"2796
[; <" PIR2 equ 0FA1h ;# ">
"2862
[; <" IPR2 equ 0FA2h ;# ">
"2928
[; <" EECON1 equ 0FA6h ;# ">
"2994
[; <" EECON2 equ 0FA7h ;# ">
"3001
[; <" EEDATA equ 0FA8h ;# ">
"3008
[; <" EEADR equ 0FA9h ;# ">
"3015
[; <" EEADRH equ 0FAAh ;# ">
"3022
[; <" RCSTA equ 0FABh ;# ">
"3027
[; <" RCSTA1 equ 0FABh ;# ">
"3232
[; <" TXSTA equ 0FACh ;# ">
"3237
[; <" TXSTA1 equ 0FACh ;# ">
"3488
[; <" TXREG equ 0FADh ;# ">
"3493
[; <" TXREG1 equ 0FADh ;# ">
"3500
[; <" RCREG equ 0FAEh ;# ">
"3505
[; <" RCREG1 equ 0FAEh ;# ">
"3512
[; <" SPBRG equ 0FAFh ;# ">
"3517
[; <" SPBRG1 equ 0FAFh ;# ">
"3524
[; <" SPBRGH equ 0FB0h ;# ">
"3531
[; <" T3CON equ 0FB1h ;# ">
"3643
[; <" TMR3 equ 0FB2h ;# ">
"3650
[; <" TMR3L equ 0FB2h ;# ">
"3657
[; <" TMR3H equ 0FB3h ;# ">
"3664
[; <" CMCON equ 0FB4h ;# ">
"3754
[; <" CVRCON equ 0FB5h ;# ">
"3833
[; <" ECCP1AS equ 0FB6h ;# ">
"3915
[; <" PWM1CON equ 0FB7h ;# ">
"3985
[; <" BAUDCON equ 0FB8h ;# ">
"3990
[; <" BAUDCTL equ 0FB8h ;# ">
"4157
[; <" CCP2CON equ 0FBAh ;# ">
"4236
[; <" CCPR2 equ 0FBBh ;# ">
"4243
[; <" CCPR2L equ 0FBBh ;# ">
"4250
[; <" CCPR2H equ 0FBCh ;# ">
"4257
[; <" CCP1CON equ 0FBDh ;# ">
"4354
[; <" CCPR1 equ 0FBEh ;# ">
"4361
[; <" CCPR1L equ 0FBEh ;# ">
"4368
[; <" CCPR1H equ 0FBFh ;# ">
"4375
[; <" ADCON2 equ 0FC0h ;# ">
"4446
[; <" ADCON1 equ 0FC1h ;# ">
"4531
[; <" ADCON0 equ 0FC2h ;# ">
"4650
[; <" ADRES equ 0FC3h ;# ">
"4657
[; <" ADRESL equ 0FC3h ;# ">
"4664
[; <" ADRESH equ 0FC4h ;# ">
"4671
[; <" SSPCON2 equ 0FC5h ;# ">
"4733
[; <" SSPCON1 equ 0FC6h ;# ">
"4803
[; <" SSPSTAT equ 0FC7h ;# ">
"5024
[; <" SSPADD equ 0FC8h ;# ">
"5031
[; <" SSPBUF equ 0FC9h ;# ">
"5038
[; <" T2CON equ 0FCAh ;# ">
"5109
[; <" PR2 equ 0FCBh ;# ">
"5114
[; <" MEMCON equ 0FCBh ;# ">
"5219
[; <" TMR2 equ 0FCCh ;# ">
"5226
[; <" T1CON equ 0FCDh ;# ">
"5329
[; <" TMR1 equ 0FCEh ;# ">
"5336
[; <" TMR1L equ 0FCEh ;# ">
"5343
[; <" TMR1H equ 0FCFh ;# ">
"5350
[; <" RCON equ 0FD0h ;# ">
"5483
[; <" WDTCON equ 0FD1h ;# ">
"5511
[; <" HLVDCON equ 0FD2h ;# ">
"5516
[; <" LVDCON equ 0FD2h ;# ">
"5781
[; <" OSCCON equ 0FD3h ;# ">
"5858
[; <" T0CON equ 0FD5h ;# ">
"5935
[; <" TMR0 equ 0FD6h ;# ">
"5942
[; <" TMR0L equ 0FD6h ;# ">
"5949
[; <" TMR0H equ 0FD7h ;# ">
"5956
[; <" STATUS equ 0FD8h ;# ">
"6027
[; <" FSR2 equ 0FD9h ;# ">
"6034
[; <" FSR2L equ 0FD9h ;# ">
"6041
[; <" FSR2H equ 0FDAh ;# ">
"6048
[; <" PLUSW2 equ 0FDBh ;# ">
"6055
[; <" PREINC2 equ 0FDCh ;# ">
"6062
[; <" POSTDEC2 equ 0FDDh ;# ">
"6069
[; <" POSTINC2 equ 0FDEh ;# ">
"6076
[; <" INDF2 equ 0FDFh ;# ">
"6083
[; <" BSR equ 0FE0h ;# ">
"6090
[; <" FSR1 equ 0FE1h ;# ">
"6097
[; <" FSR1L equ 0FE1h ;# ">
"6104
[; <" FSR1H equ 0FE2h ;# ">
"6111
[; <" PLUSW1 equ 0FE3h ;# ">
"6118
[; <" PREINC1 equ 0FE4h ;# ">
"6125
[; <" POSTDEC1 equ 0FE5h ;# ">
"6132
[; <" POSTINC1 equ 0FE6h ;# ">
"6139
[; <" INDF1 equ 0FE7h ;# ">
"6146
[; <" WREG equ 0FE8h ;# ">
"6158
[; <" FSR0 equ 0FE9h ;# ">
"6165
[; <" FSR0L equ 0FE9h ;# ">
"6172
[; <" FSR0H equ 0FEAh ;# ">
"6179
[; <" PLUSW0 equ 0FEBh ;# ">
"6186
[; <" PREINC0 equ 0FECh ;# ">
"6193
[; <" POSTDEC0 equ 0FEDh ;# ">
"6200
[; <" POSTINC0 equ 0FEEh ;# ">
"6207
[; <" INDF0 equ 0FEFh ;# ">
"6214
[; <" INTCON3 equ 0FF0h ;# ">
"6306
[; <" INTCON2 equ 0FF1h ;# ">
"6376
[; <" INTCON equ 0FF2h ;# ">
"6493
[; <" PROD equ 0FF3h ;# ">
"6500
[; <" PRODL equ 0FF3h ;# ">
"6507
[; <" PRODH equ 0FF4h ;# ">
"6514
[; <" TABLAT equ 0FF5h ;# ">
"6523
[; <" TBLPTR equ 0FF6h ;# ">
"6530
[; <" TBLPTRL equ 0FF6h ;# ">
"6537
[; <" TBLPTRH equ 0FF7h ;# ">
"6544
[; <" TBLPTRU equ 0FF8h ;# ">
"6553
[; <" PCLAT equ 0FF9h ;# ">
"6560
[; <" PC equ 0FF9h ;# ">
"6567
[; <" PCL equ 0FF9h ;# ">
"6574
[; <" PCLATH equ 0FFAh ;# ">
"6581
[; <" PCLATU equ 0FFBh ;# ">
"6588
[; <" STKPTR equ 0FFCh ;# ">
"6694
[; <" TOS equ 0FFDh ;# ">
"6701
[; <" TOSL equ 0FFDh ;# ">
"6708
[; <" TOSH equ 0FFEh ;# ">
"6715
[; <" TOSU equ 0FFFh ;# ">
"9 MCAL_Layer/GPIO/hal_gpio.c
[; ;MCAL_Layer/GPIO/hal_gpio.c: 9: volatile uint8 *tris_registers[] = {&TRISA, &TRISB, &TRISC, &TRISD, &TRISE};
[v _tris_registers `*Vuc ~T0 @X0 -> 5 `i e ]
[i _tris_registers
:U ..
&U _TRISA
&U _TRISB
&U _TRISC
&U _TRISD
&U _TRISE
..
]
"10
[; ;MCAL_Layer/GPIO/hal_gpio.c: 10: volatile uint8 *lat_registers[] = {&LATA, &LATB, &LATC, &LATD, &LATE};
[v _lat_registers `*Vuc ~T0 @X0 -> 5 `i e ]
[i _lat_registers
:U ..
&U _LATA
&U _LATB
&U _LATC
&U _LATD
&U _LATE
..
]
"11
[; ;MCAL_Layer/GPIO/hal_gpio.c: 11: volatile uint8 *port_registers[] = {&PORTA, &PORTB, &PORTC, &PORTD, &PORTE};
[v _port_registers `*Vuc ~T0 @X0 -> 5 `i e ]
[i _port_registers
:U ..
&U _PORTA
&U _PORTB
&U _PORTC
&U _PORTD
&U _PORTE
..
]
"20
[; ;MCAL_Layer/GPIO/hal_gpio.c: 20: Std_ReturnType gpio_pin_direction_initialize(const pin_config_t *_pin_config){
[v _gpio_pin_direction_initialize `(uc ~T0 @X0 1 ef1`*CS273 ]
{
[e :U _gpio_pin_direction_initialize ]
[v __pin_config `*CS273 ~T0 @X0 1 r1 ]
[f ]
"21
[; ;MCAL_Layer/GPIO/hal_gpio.c: 21:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"22
[; ;MCAL_Layer/GPIO/hal_gpio.c: 22:     if(((void*)0) == _pin_config || (_pin_config->pin > 8 -1)){
[e $ ! || == -> -> -> 0 `i `*v `*CS273 __pin_config > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i 275  ]
{
"23
[; ;MCAL_Layer/GPIO/hal_gpio.c: 23:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"24
[; ;MCAL_Layer/GPIO/hal_gpio.c: 24:     }else{
}
[e $U 276  ]
[e :U 275 ]
{
"25
[; ;MCAL_Layer/GPIO/hal_gpio.c: 25:         switch(_pin_config->direction){
[e $U 278  ]
{
"26
[; ;MCAL_Layer/GPIO/hal_gpio.c: 26:             case GPIO_DIRECTION_OUTPUT:
[e :U 279 ]
"27
[; ;MCAL_Layer/GPIO/hal_gpio.c: 27:                 ((*tris_registers[_pin_config->port]) &= ~((uint8)0x01 << (_pin_config->pin)));
[e =& *U *U + &U _tris_registers * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_registers `ui `ux -> ~ << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"28
[; ;MCAL_Layer/GPIO/hal_gpio.c: 28:                 break;
[e $U 277  ]
"29
[; ;MCAL_Layer/GPIO/hal_gpio.c: 29:             case GPIO_DIRECTION_INPUT:
[e :U 280 ]
"30
[; ;MCAL_Layer/GPIO/hal_gpio.c: 30:                 ((*tris_registers[_pin_config->port]) |= ((uint8)0x01 << (_pin_config->pin)));
[e =| *U *U + &U _tris_registers * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_registers `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"31
[; ;MCAL_Layer/GPIO/hal_gpio.c: 31:                 break;
[e $U 277  ]
"32
[; ;MCAL_Layer/GPIO/hal_gpio.c: 32:             default:
[e :U 281 ]
"33
[; ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"34
[; ;MCAL_Layer/GPIO/hal_gpio.c: 34:         }
}
[e $U 277  ]
[e :U 278 ]
[e [\ -> . *U __pin_config 2 `i , $ . `E2985 0 279
 , $ . `E2985 1 280
 281 ]
[e :U 277 ]
"35
[; ;MCAL_Layer/GPIO/hal_gpio.c: 35:     }
}
[e :U 276 ]
"36
[; ;MCAL_Layer/GPIO/hal_gpio.c: 36:     return ret;
[e ) _ret ]
[e $UE 274  ]
"38
[; ;MCAL_Layer/GPIO/hal_gpio.c: 38: }
[e :UE 274 ]
}
"49
[; ;MCAL_Layer/GPIO/hal_gpio.c: 49: Std_ReturnType gpio_pin_git_direction_status(const pin_config_t *_pin_config, direction_t *dir_status){
[v _gpio_pin_git_direction_status `(uc ~T0 @X0 1 ef2`*CS273`*E2985 ]
{
[e :U _gpio_pin_git_direction_status ]
[v __pin_config `*CS273 ~T0 @X0 1 r1 ]
[v _dir_status `*E2985 ~T0 @X0 1 r2 ]
[f ]
"50
[; ;MCAL_Layer/GPIO/hal_gpio.c: 50:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"51
[; ;MCAL_Layer/GPIO/hal_gpio.c: 51:     if(((void*)0) == _pin_config || (_pin_config->pin > 8 -1)){
[e $ ! || == -> -> -> 0 `i `*v `*CS273 __pin_config > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i 283  ]
{
"52
[; ;MCAL_Layer/GPIO/hal_gpio.c: 52:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"53
[; ;MCAL_Layer/GPIO/hal_gpio.c: 53:     }
}
[e $U 284  ]
"54
[; ;MCAL_Layer/GPIO/hal_gpio.c: 54:     else{
[e :U 283 ]
{
"55
[; ;MCAL_Layer/GPIO/hal_gpio.c: 55:         *dir_status = (((*tris_registers[_pin_config->port]) >> (_pin_config->pin)) & (uint8)0x01);
[e = *U _dir_status -> & >> -> *U *U + &U _tris_registers * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_registers `ui `ux `i -> . *U __pin_config 1 `i -> -> -> 1 `i `uc `i `E2985 ]
"56
[; ;MCAL_Layer/GPIO/hal_gpio.c: 56:     }
}
[e :U 284 ]
"57
[; ;MCAL_Layer/GPIO/hal_gpio.c: 57:     return ret;
[e ) _ret ]
[e $UE 282  ]
"58
[; ;MCAL_Layer/GPIO/hal_gpio.c: 58: }
[e :UE 282 ]
}
"69
[; ;MCAL_Layer/GPIO/hal_gpio.c: 69: Std_ReturnType gpio_pin_write_logic(const pin_config_t *_pin_config, logic_t logic){
[v _gpio_pin_write_logic `(uc ~T0 @X0 1 ef2`*CS273`E2989 ]
{
[e :U _gpio_pin_write_logic ]
[v __pin_config `*CS273 ~T0 @X0 1 r1 ]
[v _logic `E2989 ~T0 @X0 1 r2 ]
[f ]
"70
[; ;MCAL_Layer/GPIO/hal_gpio.c: 70:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"71
[; ;MCAL_Layer/GPIO/hal_gpio.c: 71:     if(((void*)0) == _pin_config || (_pin_config->pin > 8 -1)){
[e $ ! || == -> -> -> 0 `i `*v `*CS273 __pin_config > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i 286  ]
{
"72
[; ;MCAL_Layer/GPIO/hal_gpio.c: 72:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"73
[; ;MCAL_Layer/GPIO/hal_gpio.c: 73:     }
}
[e $U 287  ]
"74
[; ;MCAL_Layer/GPIO/hal_gpio.c: 74:     else{
[e :U 286 ]
{
"75
[; ;MCAL_Layer/GPIO/hal_gpio.c: 75:         switch(logic){
[e $U 289  ]
{
"76
[; ;MCAL_Layer/GPIO/hal_gpio.c: 76:             case GPIO_LOW:
[e :U 290 ]
"77
[; ;MCAL_Layer/GPIO/hal_gpio.c: 77:                 ((*lat_registers[_pin_config->port]) &= ~((uint8)0x01 << (_pin_config->pin)));
[e =& *U *U + &U _lat_registers * -> . *U __pin_config 0 `ux -> -> # *U &U _lat_registers `ui `ux -> ~ << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"78
[; ;MCAL_Layer/GPIO/hal_gpio.c: 78:                 break;
[e $U 288  ]
"79
[; ;MCAL_Layer/GPIO/hal_gpio.c: 79:             case GPIO_HIGH:
[e :U 291 ]
"80
[; ;MCAL_Layer/GPIO/hal_gpio.c: 80:                 ((*lat_registers[_pin_config->port]) |= ((uint8)0x01 << (_pin_config->pin)));
[e =| *U *U + &U _lat_registers * -> . *U __pin_config 0 `ux -> -> # *U &U _lat_registers `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"81
[; ;MCAL_Layer/GPIO/hal_gpio.c: 81:                 break;
[e $U 288  ]
"82
[; ;MCAL_Layer/GPIO/hal_gpio.c: 82:         }
}
[e $U 288  ]
[e :U 289 ]
[e [\ -> _logic `ui , $ -> . `E2989 0 `ui 290
 , $ -> . `E2989 1 `ui 291
 288 ]
[e :U 288 ]
"83
[; ;MCAL_Layer/GPIO/hal_gpio.c: 83:     }
}
[e :U 287 ]
"84
[; ;MCAL_Layer/GPIO/hal_gpio.c: 84:     return ret;
[e ) _ret ]
[e $UE 285  ]
"85
[; ;MCAL_Layer/GPIO/hal_gpio.c: 85: }
[e :UE 285 ]
}
"96
[; ;MCAL_Layer/GPIO/hal_gpio.c: 96: Std_ReturnType gpio_pin_read_logic(const pin_config_t *_pin_config, logic_t *logic){
[v _gpio_pin_read_logic `(uc ~T0 @X0 1 ef2`*CS273`*E2989 ]
{
[e :U _gpio_pin_read_logic ]
[v __pin_config `*CS273 ~T0 @X0 1 r1 ]
[v _logic `*E2989 ~T0 @X0 1 r2 ]
[f ]
"97
[; ;MCAL_Layer/GPIO/hal_gpio.c: 97:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"98
[; ;MCAL_Layer/GPIO/hal_gpio.c: 98:     if(((void*)0) == _pin_config || (_pin_config->pin > 8 -1)){
[e $ ! || == -> -> -> 0 `i `*v `*CS273 __pin_config > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i 293  ]
{
"99
[; ;MCAL_Layer/GPIO/hal_gpio.c: 99:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"100
[; ;MCAL_Layer/GPIO/hal_gpio.c: 100:     }
}
[e $U 294  ]
"101
[; ;MCAL_Layer/GPIO/hal_gpio.c: 101:     else{
[e :U 293 ]
{
"102
[; ;MCAL_Layer/GPIO/hal_gpio.c: 102:         *logic = (((*port_registers[_pin_config->port]) >> (_pin_config->pin)) & (uint8)0x01);
[e = *U _logic -> & >> -> *U *U + &U _port_registers * -> . *U __pin_config 0 `ux -> -> # *U &U _port_registers `ui `ux `i -> . *U __pin_config 1 `i -> -> -> 1 `i `uc `i `E2989 ]
"103
[; ;MCAL_Layer/GPIO/hal_gpio.c: 103:     }
}
[e :U 294 ]
"104
[; ;MCAL_Layer/GPIO/hal_gpio.c: 104:     return ret;
[e ) _ret ]
[e $UE 292  ]
"105
[; ;MCAL_Layer/GPIO/hal_gpio.c: 105: }
[e :UE 292 ]
}
"115
[; ;MCAL_Layer/GPIO/hal_gpio.c: 115: Std_ReturnType gpio_pin_toggle_logic(const pin_config_t *_pin_config){
[v _gpio_pin_toggle_logic `(uc ~T0 @X0 1 ef1`*CS273 ]
{
[e :U _gpio_pin_toggle_logic ]
[v __pin_config `*CS273 ~T0 @X0 1 r1 ]
[f ]
"116
[; ;MCAL_Layer/GPIO/hal_gpio.c: 116:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"117
[; ;MCAL_Layer/GPIO/hal_gpio.c: 117:     if(((void*)0) == _pin_config || (_pin_config->pin > 8 -1)){
[e $ ! || == -> -> -> 0 `i `*v `*CS273 __pin_config > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i 296  ]
{
"118
[; ;MCAL_Layer/GPIO/hal_gpio.c: 118:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"119
[; ;MCAL_Layer/GPIO/hal_gpio.c: 119:     }
}
[e $U 297  ]
"120
[; ;MCAL_Layer/GPIO/hal_gpio.c: 120:     else{
[e :U 296 ]
{
"121
[; ;MCAL_Layer/GPIO/hal_gpio.c: 121:         ((*lat_registers[_pin_config->port]) ^= ((uint8)0x01 << (_pin_config->pin)));
[e =^ *U *U + &U _lat_registers * -> . *U __pin_config 0 `ux -> -> # *U &U _lat_registers `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"122
[; ;MCAL_Layer/GPIO/hal_gpio.c: 122:     }
}
[e :U 297 ]
"123
[; ;MCAL_Layer/GPIO/hal_gpio.c: 123:     return ret;
[e ) _ret ]
[e $UE 295  ]
"124
[; ;MCAL_Layer/GPIO/hal_gpio.c: 124: }
[e :UE 295 ]
}
"135
[; ;MCAL_Layer/GPIO/hal_gpio.c: 135: Std_ReturnType gpio_pin_initialize(const pin_config_t *_pin_config){
[v _gpio_pin_initialize `(uc ~T0 @X0 1 ef1`*CS273 ]
{
[e :U _gpio_pin_initialize ]
[v __pin_config `*CS273 ~T0 @X0 1 r1 ]
[f ]
"136
[; ;MCAL_Layer/GPIO/hal_gpio.c: 136:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"137
[; ;MCAL_Layer/GPIO/hal_gpio.c: 137:     if(((void*)0) == _pin_config || (_pin_config->pin > 8 -1)){
[e $ ! || == -> -> -> 0 `i `*v `*CS273 __pin_config > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i 299  ]
{
"138
[; ;MCAL_Layer/GPIO/hal_gpio.c: 138:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"139
[; ;MCAL_Layer/GPIO/hal_gpio.c: 139:     }
}
[e $U 300  ]
"140
[; ;MCAL_Layer/GPIO/hal_gpio.c: 140:     else{
[e :U 299 ]
{
"141
[; ;MCAL_Layer/GPIO/hal_gpio.c: 141:         ret = gpio_pin_direction_initialize(_pin_config);
[e = _ret ( _gpio_pin_direction_initialize (1 __pin_config ]
"142
[; ;MCAL_Layer/GPIO/hal_gpio.c: 142:         ret = gpio_pin_write_logic(_pin_config, _pin_config->logic);
[e = _ret ( _gpio_pin_write_logic (2 , __pin_config -> . *U __pin_config 3 `E2989 ]
"143
[; ;MCAL_Layer/GPIO/hal_gpio.c: 143:     }
}
[e :U 300 ]
"144
[; ;MCAL_Layer/GPIO/hal_gpio.c: 144:     return ret;
[e ) _ret ]
[e $UE 298  ]
"145
[; ;MCAL_Layer/GPIO/hal_gpio.c: 145: }
[e :UE 298 ]
}
"156
[; ;MCAL_Layer/GPIO/hal_gpio.c: 156: Std_ReturnType gpio_port_direction_initialize(port_index_t port, uint8 direction){
[v _gpio_port_direction_initialize `(uc ~T0 @X0 1 ef2`E2978`uc ]
{
[e :U _gpio_port_direction_initialize ]
[v _port `E2978 ~T0 @X0 1 r1 ]
[v _direction `uc ~T0 @X0 1 r2 ]
[f ]
"157
[; ;MCAL_Layer/GPIO/hal_gpio.c: 157:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"158
[; ;MCAL_Layer/GPIO/hal_gpio.c: 158:     if(port > 5 -1)
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 302  ]
"159
[; ;MCAL_Layer/GPIO/hal_gpio.c: 159:     {
{
"160
[; ;MCAL_Layer/GPIO/hal_gpio.c: 160:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"161
[; ;MCAL_Layer/GPIO/hal_gpio.c: 161:     }
}
[e $U 303  ]
"162
[; ;MCAL_Layer/GPIO/hal_gpio.c: 162:     else{
[e :U 302 ]
{
"163
[; ;MCAL_Layer/GPIO/hal_gpio.c: 163:         *tris_registers[port] = direction;
[e = *U *U + &U _tris_registers * -> _port `ux -> -> # *U &U _tris_registers `ui `ux _direction ]
"164
[; ;MCAL_Layer/GPIO/hal_gpio.c: 164:     }
}
[e :U 303 ]
"165
[; ;MCAL_Layer/GPIO/hal_gpio.c: 165:     return ret;
[e ) _ret ]
[e $UE 301  ]
"166
[; ;MCAL_Layer/GPIO/hal_gpio.c: 166: }
[e :UE 301 ]
}
"177
[; ;MCAL_Layer/GPIO/hal_gpio.c: 177: Std_ReturnType gpio_port_git_direction_status(port_index_t port, uint8 *direction_status){
[v _gpio_port_git_direction_status `(uc ~T0 @X0 1 ef2`E2978`*uc ]
{
[e :U _gpio_port_git_direction_status ]
[v _port `E2978 ~T0 @X0 1 r1 ]
[v _direction_status `*uc ~T0 @X0 1 r2 ]
[f ]
"178
[; ;MCAL_Layer/GPIO/hal_gpio.c: 178:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"179
[; ;MCAL_Layer/GPIO/hal_gpio.c: 179:     if((((void*)0) == direction_status) || (port > 5 -1))
[e $ ! || == -> -> -> 0 `i `*v `*uc _direction_status > -> _port `ui -> - -> 5 `i -> 1 `i `ui 305  ]
"180
[; ;MCAL_Layer/GPIO/hal_gpio.c: 180:     {
{
"181
[; ;MCAL_Layer/GPIO/hal_gpio.c: 181:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"182
[; ;MCAL_Layer/GPIO/hal_gpio.c: 182:     }
}
[e $U 306  ]
"183
[; ;MCAL_Layer/GPIO/hal_gpio.c: 183:     else{
[e :U 305 ]
{
"184
[; ;MCAL_Layer/GPIO/hal_gpio.c: 184:         *direction_status = *tris_registers[port];
[e = *U _direction_status *U *U + &U _tris_registers * -> _port `ux -> -> # *U &U _tris_registers `ui `ux ]
"185
[; ;MCAL_Layer/GPIO/hal_gpio.c: 185:     }
}
[e :U 306 ]
"186
[; ;MCAL_Layer/GPIO/hal_gpio.c: 186:     return ret;
[e ) _ret ]
[e $UE 304  ]
"187
[; ;MCAL_Layer/GPIO/hal_gpio.c: 187: }
[e :UE 304 ]
}
"198
[; ;MCAL_Layer/GPIO/hal_gpio.c: 198: Std_ReturnType gpio_port_write_logic(port_index_t port, uint8 logic){
[v _gpio_port_write_logic `(uc ~T0 @X0 1 ef2`E2978`uc ]
{
[e :U _gpio_port_write_logic ]
[v _port `E2978 ~T0 @X0 1 r1 ]
[v _logic `uc ~T0 @X0 1 r2 ]
[f ]
"199
[; ;MCAL_Layer/GPIO/hal_gpio.c: 199:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"200
[; ;MCAL_Layer/GPIO/hal_gpio.c: 200:     if(port > 5 -1){
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 308  ]
{
"201
[; ;MCAL_Layer/GPIO/hal_gpio.c: 201:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"202
[; ;MCAL_Layer/GPIO/hal_gpio.c: 202:     }
}
[e $U 309  ]
"203
[; ;MCAL_Layer/GPIO/hal_gpio.c: 203:     else{
[e :U 308 ]
{
"204
[; ;MCAL_Layer/GPIO/hal_gpio.c: 204:         *lat_registers[port] = logic;
[e = *U *U + &U _lat_registers * -> _port `ux -> -> # *U &U _lat_registers `ui `ux _logic ]
"205
[; ;MCAL_Layer/GPIO/hal_gpio.c: 205:     }
}
[e :U 309 ]
"206
[; ;MCAL_Layer/GPIO/hal_gpio.c: 206:     return ret;
[e ) _ret ]
[e $UE 307  ]
"207
[; ;MCAL_Layer/GPIO/hal_gpio.c: 207: }
[e :UE 307 ]
}
"218
[; ;MCAL_Layer/GPIO/hal_gpio.c: 218: Std_ReturnType gpio_port_read_logic(port_index_t port, uint8 *logic){
[v _gpio_port_read_logic `(uc ~T0 @X0 1 ef2`E2978`*uc ]
{
[e :U _gpio_port_read_logic ]
[v _port `E2978 ~T0 @X0 1 r1 ]
[v _logic `*uc ~T0 @X0 1 r2 ]
[f ]
"219
[; ;MCAL_Layer/GPIO/hal_gpio.c: 219:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"220
[; ;MCAL_Layer/GPIO/hal_gpio.c: 220:     if((((void*)0) == logic) || (port > 5 -1)){
[e $ ! || == -> -> -> 0 `i `*v `*uc _logic > -> _port `ui -> - -> 5 `i -> 1 `i `ui 311  ]
{
"221
[; ;MCAL_Layer/GPIO/hal_gpio.c: 221:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"222
[; ;MCAL_Layer/GPIO/hal_gpio.c: 222:     }
}
[e $U 312  ]
"223
[; ;MCAL_Layer/GPIO/hal_gpio.c: 223:     else{
[e :U 311 ]
{
"224
[; ;MCAL_Layer/GPIO/hal_gpio.c: 224:          *logic = *lat_registers[port];
[e = *U _logic *U *U + &U _lat_registers * -> _port `ux -> -> # *U &U _lat_registers `ui `ux ]
"225
[; ;MCAL_Layer/GPIO/hal_gpio.c: 225:     }
}
[e :U 312 ]
"226
[; ;MCAL_Layer/GPIO/hal_gpio.c: 226:     return ret;
[e ) _ret ]
[e $UE 310  ]
"227
[; ;MCAL_Layer/GPIO/hal_gpio.c: 227: }
[e :UE 310 ]
}
"237
[; ;MCAL_Layer/GPIO/hal_gpio.c: 237: Std_ReturnType gpio_port_toggle_logic(port_index_t port){
[v _gpio_port_toggle_logic `(uc ~T0 @X0 1 ef1`E2978 ]
{
[e :U _gpio_port_toggle_logic ]
[v _port `E2978 ~T0 @X0 1 r1 ]
[f ]
"238
[; ;MCAL_Layer/GPIO/hal_gpio.c: 238:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"239
[; ;MCAL_Layer/GPIO/hal_gpio.c: 239:     if((port > 5 -1)){
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 314  ]
{
"240
[; ;MCAL_Layer/GPIO/hal_gpio.c: 240:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"241
[; ;MCAL_Layer/GPIO/hal_gpio.c: 241:     }
}
[e $U 315  ]
"242
[; ;MCAL_Layer/GPIO/hal_gpio.c: 242:     else{
[e :U 314 ]
{
"243
[; ;MCAL_Layer/GPIO/hal_gpio.c: 243:         *lat_registers[port] ^= 0xFF;
[e =^ *U *U + &U _lat_registers * -> _port `ux -> -> # *U &U _lat_registers `ui `ux -> -> 255 `i `uc ]
"244
[; ;MCAL_Layer/GPIO/hal_gpio.c: 244:     }
}
[e :U 315 ]
"245
[; ;MCAL_Layer/GPIO/hal_gpio.c: 245:     return ret;
[e ) _ret ]
[e $UE 313  ]
"246
[; ;MCAL_Layer/GPIO/hal_gpio.c: 246: }
[e :UE 313 ]
}
